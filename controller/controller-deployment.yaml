# Controller Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cerebro-controller
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app: cerebro-controller
      type: cerebro-controller
  replicas: 1
  template:
    metadata:
      labels:
        app: cerebro-controller
        type: cerebro-controller
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: cerebro/nodename
                operator: In
                values:
                - node0
      initContainers:
      - name: git-sync-cerebro
        image: {{ .Values.controller.gitSyncImage }}
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: cerebro-repo
          mountPath: {{ .Values.controller.cerebroRepoMountPath }}
        - name: git-secret
          mountPath: /etc/git-secret
        env:
        - name: GIT_SYNC_REPO
          value: {{ .Values.controller.cerebroRepoURL }}
        - name: GIT_SYNC_BRANCH
          value: main
        - name: GIT_SYNC_ROOT
          value: {{ .Values.controller.cerebroRepoMountPath }}
        - name: GIT_SYNC_SSH
          value: "true"
        - name: GIT_SYNC_SERVER
          value: github.com
        securityContext:
          runAsUser: 0
      - name: git-sync-user-repo
        image: {{ .Values.controller.gitSyncImage }}
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: user-repo
          mountPath: {{ .Values.controller.userRepoMountPath }}
        - name: git-secret
          mountPath: /etc/git-secret
        env:
        - name: GIT_SYNC_REPO
          value: {{ .Values.controller.userRepoURL }}
        - name: GIT_SYNC_BRANCH
          value: main
        - name: GIT_SYNC_ROOT
          value: {{ .Values.controller.userRepoMountPath }}
        - name: GIT_SYNC_SSH
          value: "true"
        - name: GIT_SYNC_SERVER
          value: github.com
        securityContext:
          runAsUser: 0
      containers:
      - name: cerebro-controller-container
        image: {{ .Values.controller.image }}
        imagePullPolicy: IfNotPresent
        command: [ "/bin/bash", "-c", "--" ]
        args: [ "while true; do sleep 5; done;" ]
        # resources:
        #   requests:
        #     memory: "64Mi"
        #     cpu: "250m"
        #   limits:
        #     memory: "128Mi"
        #     cpu: "500m"
        volumeMounts:
        - name: kube-config
          mountPath: /root/.kube
        - name: cerebro-repo
          mountPath: {{ .Values.controller.cerebroRepoMountPath }}
        - name: user-repo
          mountPath: {{ .Values.controller.userRepoMountPath }}
        - name: cerebro-hyperparameter-storage
          mountPath: {{ .Values.controller.hyperparameterMountPath }}
        - name: cerebro-checkpoint-storage
          mountPath: {{ .Values.controller.checkpointMountPath }}
        - name: cerebro-config-storage
          mountPath: {{ .Values.controller.configMountPath }}
        - name: cerebro-data-storage
          mountPath: {{ .Values.controller.dataMountPath }}
        - name: cerebro-properties-storage
          mountPath: {{ .Values.controller.propertiesMountPath }}
        ports:
        - containerPort: {{ .Values.controller.containerPort }}
      volumes:
      - name: cerebro-repo
        hostPath:
          path: {{ .Values.controller.cerebroRepoHostPath }}
          type: Directory
      - name: user-repo
        hostPath:
          path: {{ .Values.controller.userRepoHostPath }}
          type: Directory
      - name: cerebro-checkpoint-storage
        persistentVolumeClaim:
          claimName: cerebro-checkpoint-pvc
      - name: cerebro-config-storage
        persistentVolumeClaim:
          claimName: cerebro-config-pvc
      - name: cerebro-data-storage
        persistentVolumeClaim:
          claimName: cerebro-data-pvc
      - name: cerebro-properties-storage
        configMap:
          name: cerebro-properties
      - name: cerebro-hyperparameter-storage
        configMap:
          name: hyperparameter-properties
      - name: kube-config
        secret:
          secretName: kube-config
      - name: git-secret
        secret:
          defaultMode: 256
          secretName: git-creds # your-ssh-key